<% @entity = @decorator.object %>
<%= form_for @entity, :url => polymorphic_path([:tag, @entity], :mode => :injector), :html => { style: 'width:auto;height:auto'} do |f| %>
    <%= form_errors_helper f, @entity, false %>

    <div class="left">
      <div class="pic_picker_field">
        <%= pic_field f,
                      :decorator => @decorator,
                      :fallback_img => image_path('PickPicture.png'),
                      :nopicker => true %>
      </div>
      <% if @decorator.image.blank? %>
          <p>Click a picture to attach it.</p>
      <% else %>
          <p>Prefer another picture?<br/>Click one!</p>
      <% end %>
    </div>

    <div class="middle">
      <div class="notifications-panel">
        <%= flash_notifications_div 'flash_notifications', false %>
      </div>
      <div class="edit_recipe_field text" >
        <%= f.label @decorator.attribute_for(:title), 'Title' -%>
        <% @decorator.title %>
          <div class="expandingArea">
            <pre><span></span><br></pre>
            <%= f.text_area @decorator.attribute_for(:title), rows: '1' -%>
          </div>
      </div>

      <%= token_input_div f,
                          :attribute_name => :editable_tags,
                          :label => 'Tag(s)',
                          :data => {type: Tag.typenum(@decorator.eligible_tagtypes)}
      %>

      <div class="edit_recipe_field text" >
        <%= f.label :comment, 'Notes' -%>
          <div class="expandingArea">
            <pre><span></span><br></pre>
            <%= f.text_area :collectible_comment, rows: '1', placeholder: 'What are your thoughts about this recipe?' -%>
          </div>
      </div>
    </div>

    <div class="right">
      <%= f.label "Collect As" %>
      <%= collection_select :recipe,
                            :becomes,
                            PageRefServices.type_selections,
                            :last,
                            :first,
                            selected: PageRefServices.type_selections.find { |ts| ts.last == @decorator.model_name }.first %>
      <br><br><%= f.check_box :collectible_private %>
      <%= f.label :collectible_private, 'Private', class: 'checkbox' %>
      <%# button_to "Forget It", remove_recipe_path(@entity), class: "btn btn-sm btn-success" %>
      <%= hidden_field_tag 'layout', 'injector' %>
    </div>
    <%= f.submit 'Save', class: 'btn btn-success' %>
<% end %>
