<%= present decorator, current_user_or_guest do |presenter| %>
    <td class="avatar-column">
      <%# image_enclosure decorator, fill_mode: 'fixed-width' %>
      <%# link_to_submit decorator.handle, polymorphic_path(decorator) %>
      <%= presenter.card_avatar :fallback_img => image_path('Upload_Icon.jpg') %>
    </td>
    <td class="description-column">
      <%= presenter.card_homelink class: 'title-link' %>
      <%= collectible_collect_button(decorator, 'lg') unless decorator.object == current_user_or_guest %>
      <br><%= decorator.about %>
    </td>
    <td><%= decorator.extract 'tags' %><%# taggable_list decorator %></td>
    <td>
      <%= count_report decorator.object.collection_size, 'cookmarks', '<b>Has collected</b>', '<br>' %>
      <%= count_report decorator.object.followees.count, 'other', '<b>Following</b>', '<br>' %>
      <%= count_report decorator.object.followers.count, 'other', '<b>Followed by</b>', '<br>' %>
      <%= count_report decorator.object.collection_size(Feed), 'feed', '<b>Taking</b>', '<br>' %>
      <%= count_report decorator.owned_lists(current_user).count, 'list', '<b>Owns</b>', '<br>' %>
    </td>
    <td class="actions-column">
      <%# user_follow_button(decorator.object) if current_user && (current_user.id != decorator.id) %>
      <%= button_to_submit((decorator.private? ? 'Show' : 'Hide'), user_path(decorator.object, user: {private: (decorator.private? ? 0 : 1)}), method: :put) if response_service.admin_view? %>
    </td>
<% end %>
