<%= simple_form_for(@referent, url: (@referent.id ? referent_path(@referent) : referents_path), html: {class: "referent_form"}) do |f| %>
    <%# f.select :typenum, @typeselections %>
    <%= f.input :description %>
    <%= token_input_field f,
                          :parents,
                          label: "Categories it's under",
                          data: { type: @referent.typenum } %>
    <%= token_input_field f,
                          :children,
                          label: "Kinds of #{@referent.name}",
                          data: { type: @referent.typenum } %>
    <h3>Expressions <%# @referent.typename %></h3>
    <div class="field" id="expressions_field">
      <table id="expressions_table">
        <tr>
          <th>Name</th>
          <th>Language</th>
          <th>Form</th>
        </tr>
        <%= f.fields_for :expressions do |builder| %>
          <%= render 'expression_fields', f: builder %>
        <% end %>
      </table>
      <%= link_to_add_fields "Add Expression:", f, :expressions, referent_id: @referent.id, localename: "English", formname: "Generic" %>
      <h4>Add Expression:</h4>
      <%= text_field_tag :"expression_txt", "",
                         class: "token-input-field-pending",
                         id: "referent_add_expression",
                         data: { pre: "",
                                 "token-limit" => 1,
                                 "query" => "tagtypes=#{@referent.typenum}&untypedOK=1",
                                 "no-results-text" => "No existing name found; hit Enter to make a new tag",
                                 "hint" => "Type/select another name tag to express this thing",
                                 "on-add" => "RP.edit_referent.add_expression" } %>
    </div>
    <%= f.input :isCountable, :label => false, :inline_label => "Countable", :as => :boolean if [4,5,12,13].include?(@referent.typenum)%>
    <%= form_actions f, cancel_path: referents_path %>
<% end %>
