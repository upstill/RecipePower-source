# Install and 'source' me at ~/.bash_profile

APP_HOME="/home/upstill/RecipePower-source"
LOG_HOME="${APP_HOME}/log"
# PG_HOME is where postgres is installed and the directory where 'locate postgresql.conf' indicates
PG_HOME="/etc/postgresql/10/main"
# PG_BIN is the bin directory for postgres commands
PG_BIN="/usr/lib/postgresql/10/bin"
PATH="${PG_BIN}:${PATH}"

function clearlog()
{
   cat /dev/null >${APP_HOME}/log/development.log
}

function ack_all()
{
   ack $@ . --ignore-dir=log --ignore-dir=tmp --ignore-dir=doc
}

alias pg_start="sudo -u postgres ${PG_BIN}/pg_ctl start -D ${PG_HOME} -l ${LOG_HOME}/server.log start"
alias pg_stop="sudo -u postgres ${PG_BIN}/pg_ctl stop -D ${PG_HOME} -s -m fast"
alias pg_status="sudo -u postgres ${PG_BIN}/pg_ctl status -D ${PG_HOME}"

function ackall()
{
   ack $1 . --ignore-dir=log --ignore-dir=tmp --ignore-dir=doc
}

function vig()
{
   export FLIST=`ack $1 ${2:-"app"} -l` 
   vi +/$1/ $FLIST 
}

function hkl()
{
  echo "heroku $@ --app strong-galaxy-5765"
  heroku $@ --app strong-galaxy-5765
}

alias hkl_capture="hkl pg:backups capture DATABASE_URL"

alias hkl_web="hkl logs --tail | grep 'web.1'"
alias hkl_worker="hkl logs --tail | grep 'worker.1'"

function hkl_curl()
{
   export DUMPNAME="${APP_HOME}/../db_backup_live/`date \"+%Y-%m-%d\"`.dump"
   echo "curl -o $DUMPNAME `heroku pg:backups public-url --app strong-galaxy-5765`"
   curl -o $DUMPNAME `heroku pg:backups public-url --app strong-galaxy-5765`
}

function hkl_mirror()
{
   hkl pg:backups capture DATABASE_URL
   export DUMPNAME="${APP_HOME}/../db_backup_live/`date \"+%Y-%m-%d\"`.dump"
   echo "curl -o $DUMPNAME `heroku pg:backups public-url --app strong-galaxy-5765`"
   curl -o $DUMPNAME `heroku pg:backups public-url --app strong-galaxy-5765`
   pg_restore --verbose --clean --no-acl --no-owner -h localhost -U upstill -d dabpmrobtjc0ei $DUMPNAME
}

function pg_dump_dev()
{
  export NAME=${1:-"`date \"+%Y-%m-%d\"`.dump"}
  export DUMPPATH="${APP_HOME}/../db_backup_dev/$NAME"
  echo "pg_dump --verbose -h localhost --clean --format=custom --file="$DUMPPATH" dabpmrobtjc0ei"
  pg_dump --verbose -h localhost --clean --format=custom --file="$DUMPPATH" dabpmrobtjc0ei
}
alias pg_dump_live="hkl_capture ; hkl_curl"
alias pg_dump_staging="hks_capture ; hks_curl"

pg_restore_dev()
{
  export NAME=${1:-"`ls -1 ../db_backup_dev | grep 2019 | tail -1`"}
  export DUMPPATH="${APP_HOME}/../db_backup_dev/$NAME"
  echo "pg_restore --verbose --clean --no-acl --no-owner -h localhost -U upstill -d dabpmrobtjc0ei $DUMPPATH"
  pg_restore --verbose --clean --no-acl --no-owner -h localhost -U upstill -d dabpmrobtjc0ei $DUMPPATH
}

pg_restore_live()
{
  export NAME=${1:-"`ls -1 ../db_backup_live | grep 2019 | tail -1`"}
  export DUMPPATH="${APP_HOME}/../db_backup_live/$NAME"
  echo "pg_restore --verbose --clean --no-acl --no-owner -h localhost -U upstill -d dabpmrobtjc0ei $DUMPPATH"
  pg_restore --verbose --clean --no-acl --no-owner -h localhost -U upstill -d dabpmrobtjc0ei $DUMPPATH
}
# alias db_restore_live="pg_restore --verbose --clean --no-acl --no-owner -h localhost -U upstill -d dabpmrobtjc0ei `ls -1 ${APP_HOME}/../db_backup_live/20*.dump | tail -1`"
# alias db_restore_dev="pg_restore --verbose --clean --no-acl --no-owner -h localhost -U upstill -d dabpmrobtjc0ei `ls -1 ${APP_HOME}/../db_backup_dev/20*.dump | tail -1`"
# alias db_restore_staging="pg_restore --verbose --clean --no-acl --no-owner -h localhost -U upstill -d dabpmrobtjc0ei ${APP_HOME}/../db_backup_staging/\$*"

export LC_CTYPE=en_US.UTF-8
